version: "3.7"
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__WEBSERVER__RBAC=False
  - AIRFLOW__KUBERNETES__IN_CLUSTER=False
  - AIRFLOW_CONN_MOVIELENS=http://airflow:airflow@movielens
  - MOVIELENS_USER=airflow
  - MOVIELENS_PASSWORD=airflow
  - MOVIELENS_HOST=http://movielens.airflow.svc.cluster.local:80
x-airflow-image: &airflow_image apache/airflow:1.10.12-python3.8
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    networks:
      - airflow
  init:
    image: *airflow_image
    depends_on:
      - postgres
    networks:
      - airflow
    environment: *airflow_environment
    command: upgradedb
  webserver:
    image: *airflow_image
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    networks:
      - airflow
    environment: *airflow_environment
    command: webserver
  scheduler:
    image: *airflow_image
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - logs:/opt/airflow/logs
      - ~/.kube/config:/home/airflow/.kube/config
    networks:
      - airflow
    environment: *airflow_environment
    command: scheduler
  movielens:
    build: ../images/movielens-api
    image: manning-airflow/ch10-movielens-api
    networks:
      - airflow
    ports:
      - "5000:5000"
    environment:
      API_USER: airflow
      API_PASSWORD: airflow

  # These aren't actual services, but we include them to make sure that the
  # corresponding images are built by when pulling up docker-compose.
  movielens-fetch:
    build: ../images/movielens-fetch
    image: manning-airflow/ch10-movielens-fetch
    restart: "no"
  movielens-rank:
    build: ../images/movielens-rank
    image: manning-airflow/ch10-movielens-rank
    restart: "no"

networks:
  airflow:
    name: airflow

volumes:
  logs:
