version: "3.7"
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  # Airflow settings.
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__WEBSERVER__RBAC=False
  # Movielens settings.
  - AIRFLOW_CONN_MOVIELENS=http://airflow:airflow@movielens
  - MOVIELENS_USER=airflow
  - MOVIELENS_PASSWORD=airflow
  # AWS setttings.
  - AWS_DEFAULT_REGION=eu-west-1
  - AIRFLOW_CONN_MY_AWS_CONN=s3://?aws_access_key_id=${AWS_ACCESS_KEY}&aws_secret_access_key=${AWS_ACCESS_SECRET}
  - RATINGS_BUCKET=${RATINGS_BUCKET}
  - RANKINGS_BUCKET=${RANKINGS_BUCKET}
  - CRAWLER_NAME=${CRAWLER_NAME}
x-airflow-image: &airflow_image apache/airflow:2.0.0-python3.8
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
  init:
    build:
      context: docker/airflow-aws
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: manning-airflow/airflow-aws
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: -c 'airflow db upgrade && sleep 5 && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org'
  webserver:
    build:
      context: docker/airflow-aws
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: manning-airflow/airflow-aws
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: webserver
  scheduler:
    build:
      context: docker/airflow-aws
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: manning-airflow/airflow-aws
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - data:/data
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: scheduler
  movielens:
    build: ../chapter08/docker/movielens-api
    image: manning-airflow/movielens-api
    ports:
      - "5000:5000"
    environment:
      API_USER: airflow
      API_PASSWORD: airflow

volumes:
  data:
  logs:
